/// <reference path="jquery-1.6.2-vsdoc.js" />
/// <reference path="json.js" />
//视聆通公用javascript库
var AppRunMode = "run";

var rootpath = "http://" + window.location.host + "/";

//服务端ajax服务页面的路径
var ajaxpath = "http://" + window.location.host + "/ajax/";

var MsgTitle = ""; //用于显示消息
var Msg = "";      //消息内容
var serverinfo = "";

var maxnoticeid = 0;
//最新通知号

var TotMessageCount = 0;
//消息总条数
var MinMessageRowId = 0;
var MaxMessageRowId = 0;
//当前用户的最小、最大消息号

var MsgType = "01"; //消息类型变量，取值如下：
var msgSpbg_New = "01"; //有新报告需要审批
var msgSpbg_Exe = "02"; //有新报告需要执行
var msgDocChange = "03"; //人事档案关键变更

var qydm = "";
//企业代码

var qymc = "";
//企业名称

var usercode = "";
//用户编号

var username = "";
//用户名

var sql1 = ""; //SQL脚本
var sql2 = "";
var vnotes = ""; //备注

var BodyWidth = $(window).width();
var winHeight = $(window).height();
var BodyHight = winHeight;
var lWorkAreaHeight = BodyHight - 89 - 32 - 28; //工作区高度，其中：89 页头高度 、 32 工具条高度、 28 页脚高度


//根据对象ID后缀关键字得到jquery对象
function $ById(id) {
    var selecter = "*[id$=" + id.toString() + "]";
    var obj = $('"' + selecter + '"');
    return obj;
}

//根据对象名称后缀关键字得到jquery对象
function $ByName(name) {
    var obj = $("*[name$=" + name + "]");
    return obj;
}

function $byid(id) {
    return $ById(id);
}

//根据对象名称后缀关键字得到jquery对象
function $byname(name) {
    return $ByName(name);
}

//根据对象ID得到javascript对象,注意：此函数仅针对form对象
function $ObjectById(id) {
    var selecter = "*[id$=" + id.toString() + "]";
    var fullid = $('"' + selecter + '"').attr("id");
    var obj = document.getElementById(fullid);
    return obj;
}

function $objectbyid(id) {
    return $ObjectById(id);
}

//根据对象名称得到javascript对象,注意：此函数仅针对form对象
function $ObjectByName(name) {
    var id = $("*[name$=" + name + "]").attr("id");
    var obj = document.getElementById(id);
    return obj;
}

function $objectbyname(name) {
    return $ObjectByName(name);
}

//根据jQuery选择器得到javascript对象
function $ObjectByJQuery(selector) {
    var id = $('"' + selector.toString() + '"').attr("id");
    var obj = document.getElementById(id);
    return obj;
}

function $objectbyjquery(selector) {
    return $ObjectByJQuery(selector);
}

//根据元件Id得到javascript对象
function ObjectForId(Id) {
    var obj = document.getElementById(Id);
    return obj;
}

function objectforid(Id) {
    var obj = document.getElementById(Id);
    return obj;
}


//------------CSS函数---------------------------------
function getbodyheight() {
    BodyHight = $(window).height();
    return BodyHight;
}

function GetScreenSize() {
    //获取客户端浏览器的大小信息、工作区大小
    BodyWidth = $(window).width();
    winHeight = $(window).height();
    BodyHight = winHeight;

    var lHeaderHeight = 0;

    var aObj = $byid("tblPageHeader");

    if (aObj.length != 0) {
        lHeaderHeight = parseInt(aObj.height());
    }

    var lFooterHeight = 0;
    aObj = $byid("tblPageFooter");
    if (aObj.length != 0) {
        lFooterHeight = parseInt(aObj.height());
    }

    lWorkAreaHeight = BodyHight - lHeaderHeight - lFooterHeight;
}

function SaveScreenHeight() {
    //向后台传送客户端浏览器的高度
    BodyHight = $(window).height();

    var lHeaderHeight = 0;

    var aObj = $byid("tblPageHeader");

    if (aObj.length != 0) {
        lHeaderHeight = parseInt(aObj.height());
    }

    var lFooterHeight = 0;
    aObj = $byid("tblPageFooter");
    if (aObj.length != 0) {
        lFooterHeight = parseInt(aObj.height());
    }

    lWorkAreaHeight = BodyHight - lHeaderHeight - lFooterHeight;

    ajaxpath = getajaxpath();
    var AjaxServerPage = ajaxpath + "getClientInfo.aspx";

    aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: true,
        data: {
            "screenheight": BodyHight,
            "workareaheight": lWorkAreaHeight
        },
        datatype: "text"
    });

}


function setpos(aId, x, y) {
    //设置对象的位置
    var idstr = aId.toString();
    var aObj = $("*[id$=" + idstr + "]");
    aObj.css("left", x);
    aObj.css("top", y);
}

function setcenter(aId) {
    //对象放置在浏览器窗口可见区域中间
    var idstr = aId.toString();
    var aObj = $("*[id$=" + idstr + "]");
    var w = parseInt(aObj.css("width"));
    var h = parseInt(aObj.css("height"));

    BodyWidth = $(window).width();
    BodyHight = $(window).height();

    var x = parseInt((BodyWidth - w) / 2);
    var y = parseInt((BodyHight - h) / 2);

    aObj.css("left", x);
    aObj.css("top", y);

}

function setfullclient(aId) {
    //设置对象大小与浏览器内容有效区域相同
    var idstr = aId.toString();
    var aObj = $("*[id$=" + idstr + "]");
    //var w = parseInt(aObj.css("width"));
    //var h = parseInt(aObj.css("height"));
    WinWidth = $(window).width();
    BodyWidth = $(window).width();
    BodyHight = $(window).height();

    aObj.css("left", 0);
    aObj.css("top", 0);
    aObj.css("width", BodyWidth + "px");
    aObj.css("height", BodyHight + "px");
}

function setheight(aId, aheight) {
    //对象大小与浏览器内容有效区域相同
    var idstr = aId.toString();
    var aObj = $("*[id^=" + idstr + "]");
    //var w = parseInt(aObj.css("width"));
    //var h = parseInt(aObj.css("height"));
    aObj.css("height", aheight + "px");
}

function SetGridSize(aGrid, aOtherHeight) {
    //设置AspxGridView的宽度、高度
    GetScreenSize();
    var GridHeight = lWorkAreaHeight - aOtherHeight;
    var GridWidth = BodyWidth - 16;
    aGrid.SetHeight(GridHeight);
    aGrid.SetWidth(GridWidth);

    $(window).resize(function (e) {
        GetScreenSize();
        var GridHeight = lWorkAreaHeight - aOtherHeight;
        var GridWidth = BodyWidth - 16;
        aGrid.SetHeight(GridHeight);
        aGrid.SetWidth(GridWidth);
    });

}

function SetAspxObjSize(aObj, aOtherHeight) {
    //设置DevExpress Aspx对象的宽度、高度
    GetScreenSize();
    var GridHeight = lWorkAreaHeight - aOtherHeight;
    var GridWidth = BodyWidth - 16;
    aObj.SetHeight(GridHeight);
    aObj.SetWidth(GridWidth);

    $(window).resize(function (e) {
        GetScreenSize();
        var GridHeight = lWorkAreaHeight - aOtherHeight;
        var GridWidth = BodyWidth - 16;
        aObj.SetHeight(GridHeight);
        aObj.SetWidth(GridWidth);
    });

}

function SetObjHeight(aObj, aOtherHeight) {
    //设置纯javascript对象的高度
    GetScreenSize();
    var GridHeight = lWorkAreaHeight - aOtherHeight;
    //var GridWidth = BodyWidth;
    aObj.Height = GridHeight;

    $(window).resize(function (e) {
        GetScreenSize();
        var GridHeight = lWorkAreaHeight - aOtherHeight;
        //var GridWidth = BodyWidth;
        aObj.Height = GridHeight;
    });
}

function SetDivHeight(aObj, aOtherHeight) {
    //设置Div对象的高度
    GetScreenSize();
    var GridHeight = lWorkAreaHeight - aOtherHeight;
    //var GridWidth = BodyWidth;
    aObj.offsetHeight = GridHeight;


    $(window).resize(function (e) {
        GetScreenSize();
        var GridHeight = lWorkAreaHeight - aOtherHeight;
        //var GridWidth = BodyWidth;
        aObj.offsetHeight = GridHeight;
    });
}

function SetDivHeightById(aId, aOtherHeight) {
    //根据id，设置Div对象的高度
    GetScreenSize();
    var GridHeight = lWorkAreaHeight - aOtherHeight;
    //var GridWidth = BodyWidth;
    var aObj = document.getElementById(aId);
    aObj.style.height = GridHeight + "px";


    $(window).resize(function (e) {
        GetScreenSize();
        var GridHeight = lWorkAreaHeight - aOtherHeight;
        //var GridWidth = BodyWidth;
        var aObj = document.getElementById(aId);
        aObj.style.height = GridHeight + "px";

    });
}

function $SetHeight(aId, aOtherHeight) {
    //用jQuery方式，根据对象id，设置对象的高度
    GetScreenSize();
    var aHeight = lWorkAreaHeight - aOtherHeight;
    var idstr = aId.toString();
    var aObj = $("*[id$=" + idstr + "]");
    aObj.css("height", aHeight + "px");


    $(window).resize(function (e) {
        GetScreenSize();
        var aHeight = lWorkAreaHeight - aOtherHeight;
        var idstr = aId.toString();
        var aObj = $("*[id$=" + idstr + "]");
        aObj.css("height", aHeight + "px");
    });
}

function SetHeightById(aId, aOtherHeight) {
    //设置对象的高度
    GetScreenSize();
    var aHeight = lWorkAreaHeight - aOtherHeight;
    var idstr = aId.toString();
    var aObj = $("*[id$=" + idstr + "]");
    aObj.css("height", aHeight);


    $(window).resize(function (e) {
        GetScreenSize();
        var aHeight = lWorkAreaHeight - aOtherHeight;
        var idstr = aId.toString();
        var aObj = $("*[id$=" + idstr + "]");
        aObj.css("height", aHeight);
    });
}

function SetGridHeight(aGrid, aOtherHeight) {
    //设置AspxGridView的高度
    GetScreenSize();
    var GridHeight = lWorkAreaHeight - aOtherHeight;
    //var GridWidth = BodyWidth;
    aGrid.SetHeight(GridHeight);
    //aGrid.SetWidth(aWidthPercent);

    $(window).resize(function (e) {
        GetScreenSize();
        var GridHeight = lWorkAreaHeight - aOtherHeight;
        //var GridWidth = BodyWidth;
        aGrid.SetHeight(GridHeight);
        //aGrid.SetWidth(aWidthPercent);
    });
}

function SetAspxObjHeight(aObj, aOtherHeight) {
    //设置DevExpress Aspx的高度
    GetScreenSize();
    var aHeight = lWorkAreaHeight - aOtherHeight;
    aObj.SetHeight(aHeight);

    $(window).resize(function (e) {
        GetScreenSize();
        var aHeight = lWorkAreaHeight - aOtherHeight;
        aObj.SetHeight(aHeight);
    });

}



//------Ajax同步获取数据-------------------
//serverpage 服务页面
function getvaluebypage(serverpage, sql) {
    //post命令中，中文不用编码处理
    ajaxpath = getajaxpath(); //ajaxpath;
    var AjaxServerPage = ajaxpath + serverpage;

    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "sql": sql
        },
        datatype: "text",
        contentType: "application/x-www-form-urlencoded;charset=utf-8"
    });

    var s = aObj.responseText.toString();
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");

    return s;
}

//----------- Ajax数据库操作函数----------------------
function $getbysql(serverpage, sql, callbackfun) {

    var result = "";

    //post命令中，中文不用编码处理
    //var sql = "select top 1 qybh from t_xtgl_xzqh with (nolock) where qymc = '" + qymc + "' ";
    ajaxpath = getajaxpath(); //ajaxpath; 
    var AjaxServerPage = ajaxpath + serverpage;


    $.post(AjaxServerPage, {
        Action: "post",
        "sql": sql
    }, function (data, textStatus) {

        result = callbackfun(data, textStatus);

    }, "text");

    return result;
}

function $getsqlvalue(serverpage, sql, callback) {

    var result = "";

    //post命令中，中文不用编码处理
    //var sql = "select top 1 qybh from t_xtgl_xzqh with (nolock) where qymc = '" + qymc + "' ";
    ajaxpath = getajaxpath(); //ajaxpath; 
    var AjaxServerPage = ajaxpath + serverpage;


    $.post(AjaxServerPage, {
        Action: "post",
        "sql": sql
    }, function (data, textStatus) {

        if (textStatus == "success") {
            result = data.toString();
            callback(result);
        }

    }, "text");
}

function getbysqlCallback(data, textStatus) {
    // data 可以是 xmlDoc, jsonObj, html, text, 等等.
    //this; // 这个Ajax请求的选项配置信息，请参考jQuery.get()说到的this alert(data.result);

    var r = "";

    if (textStatus == "success") {
        r = data.toString();
    }

    return r;

}

//------同步获取数据-------------------
function getsqlvalue(sql) {
    //post命令中，中文不用编码处理
    //var sql = "select top 1 qybh from t_xtgl_xzqh with (nolock) where qymc = '" + qymc + "' ";
    ajaxpath = getajaxpath(); //ajaxpath; 
    var AjaxServerPage = ajaxpath + 'getbysql.aspx';


    //AjaxServerPage,
    //datatype:"html"
    //"../ajax/getbysql.aspx"
    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "sql": sql
        },
        datatype: "text",
        contentType: "application/x-www-form-urlencoded;charset=utf-8"
    }); //.responseText;
    //.$("*value").text();

    var s = aObj.responseText.toString();
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");

    return s;
}

function $getsqlvalue2(serverpage, sql) {
    //post命令中，中文不用编码处理
    //var sql = "select top 1 qybh from t_xtgl_xzqh with (nolock) where qymc = '" + qymc + "' ";
    ajaxpath = getajaxpath(); //ajaxpath; 
    var AjaxServerPage = ajaxpath + serverpage;


    //AjaxServerPage,
    //datatype:"html"
    //"../ajax/getbysql.aspx"
    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "sql": sql
        },
        datatype: "text",
        contentType: "application/x-www-form-urlencoded;charset=utf-8"
    }); //.responseText;
    //.$("*value").text();

    var s = aObj.responseText.toString();
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");

    return s;
}

//==============字符串函数=========================================

function strlen(str)//字符串长度函数，支持中英混合
{
    var len;
    var i;
    len = 0;
    for (i = 0; i < str.length; i++) {
        if (str.charCodeAt(i) > 255)
            len += 2;
        else
            len++;
    }
    return len;
}

// 去掉字符两端的空白字符
function trim(str) {
    return str.replace(/(^[\t\n\r]*)|([\t\n\r]*$)/g, '');
};

// 去掉字符左边的空白字符
function ltrim(str) {
    return str.replace(/^[\t\n\r]/g, '');
};

// 去掉字符右边的空白字符
function rtrim(str) {
    return str.replace(/[\t\n\r]*$/g, '');
};

//------------Cookie函数--------------------------------
function getcookie(name) {
    var start = document.cookie.indexOf(name + "=");
    var len = start + name.length + 1;
    if ((!start) && (name != document.cookie.substring(0, name.length))) {
        return null;
    }
    if (start == -1)
        return null;
    var end = document.cookie.indexOf(';', len);
    if (end == -1)
        end = document.cookie.length;
    return unescape(document.cookie.substring(len, end));
}

function setcookie(name, value, expires, path, domain, secure) {
    var today = new Date();
    today.setTime(today.getTime());
    if (expires) {
        expires = expires * 1000 * 60 * 60 * 24;
    }
    var expires_date = new Date(today.getTime() + (expires));
    document.cookie = name + '=' + escape(value) +
    ((expires) ? ';expires=' + expires_date.toGMTString() : '') +
    ((path) ? ';path=' + path : '') +
    ((domain) ? ';domain=' + domain : '') +
    ((secure) ? ';secure' : '');
}

function deletecookie(name, path, domain) {
    if (getCookie(name))
        document.cookie = name + '=' +
        ((path) ? ';path=' + path : '') +
        ((domain) ? ';domain=' + domain : '') +
        ';expires=Thu, 01-Jan-1970 00:00:01 GMT';

}

//----------对话框----------------------------------------
//锁定背景屏幕
function lockScreen() {
    var clientH = $(window).height(); //浏览器高度
    var clientW = $(window).width(); //浏览器宽度
    var PageWidth = document.body.scrollWidth;
    var PageHeight = document.body.scrollHeight;
    //var docH = $("body").height();        //网页高度
    //var docW = $("body").width();        //网页宽度
    var bgW = clientW > PageWidth ? clientW : PageWidth; //取有效宽
    var bgH = clientH > PageHeight ? clientH : PageHeight; //取有效高
    if ($("#iFrameLock").length == 0) { //判断DIV是否存在
        $("body").append('<iframe id="iFrameLock" HSPACE="0" VSPACE="0" frameborder="no" border="0" marginwidth="0" marginheight="0" scrolling="no" style="Z-INDEX:988;opacity:0.5;background-color:#808080;LEFT: 0px;TOP:0px;WIDTH:100%;POSITION:relative;HEIGHT:100%;">' +
        '</iframe>' +
        '<div id="divLock" HSPACE="0" VSPACE="0" frameborder="no" border="0" marginwidth="0" marginheight="0" scrolling="no" style="Z-INDEX:989;opacity:0.5;background-color:#808080;LEFT: 0px;TOP:0px;WIDTH:100%;POSITION:relative;HEIGHT:100%;">' +
        '</div>');

        $("#iFrameLock").height(bgH);
        $("#iFrameLock").width(bgW);
        $("#divLock").height(bgH);
        $("#divLock").width(bgW);

        $("#iFrameLock").css("display", "block");
        $("#iFrameLock").css("background-color", "#000000");
        $("#iFrameLock").css("position", "absolute");
        $("#iFrameLock").css("z-index", "9988");
        $("#iFrameLock").css("top", "0px");
        $("#iFrameLock").css("left", "0px");
        $("#iFrameLock").css("opacity", "0.1");

        $("#divLock").css("display", "block");
        $("#divLock").css("background-color", "#000000");
        $("#divLock").css("position", "absolute");
        $("#divLock").css("z-index", "9989");
        $("#divLock").css("top", "0px");
        $("#divLock").css("left", "0px");
        $("#divLock").css("opacity", "0.5");
    }
    else {
        $("#iFrameLock").height(bgH);
        $("#iFrameLock").width(bgW);
        $("#divLock").height(bgH);
        $("#divLock").width(bgW);
    }

    $(window).resize(function (e) {
        if ($("#iFrameLock").length == 0) {
            return;
        }

        var clientH = $(window).height(); //浏览器高度
        var clientW = $(window).width(); //浏览器宽度
        var PageWidth = document.body.scrollWidth;
        var PageHeight = document.body.scrollHeight;
        var bgW = clientW > PageWidth ? clientW : PageWidth; //取有效宽
        var bgH = clientH > PageHeight ? clientH : PageHeight; //取有效高
        $("#iFrameLock").height(bgH);
        $("#iFrameLock").width(bgW);
        $("#divLock").height(bgH);
        $("#divLock").width(bgW);
    });
}

//清除背景锁定
function clearLockScreen() {
    $("#iFrameLock").remove();
    $("#divLock").remove();
}

function disableSelect() {
    for (var i = 0; i < document.all.length; i++) {
        if (document.all(i).tagName == "SELECT")
            document.all(i).disabled = true;
    }

}

function enableSelect() {
    for (var i = 0; i < document.all.length; i++) {
        if (document.all(i).tagName == "SELECT") {
            document.all(i).disabled = false;
        }
    }
}



function CloseDialog() {
    $byid("ModalDialog").hide();
}

function ShowDialog(aMessage) {
    //生成消息窗口
    rootpath = getroot();
    lockScreen();
    //disableSelect();
    var aObj = $ById("ModalDialog");

    if (aObj.length == 0) {
        var DialogDiv = ' <div id="ModalDialog" ' +
        '   style="Z-INDEX:9999; BORDER-RIGHT: #808080 2px solid; BORDER-TOP: #808080 2px solid; BACKGROUND: #ffffff; LEFT: 198px; BORDER-LEFT: #808080 2px solid; WIDTH: 477px; BORDER-BOTTOM: #808080 2px solid; POSITION: absolute; TOP: 254px; HEIGHT: 181px;display: none;"> ' +
        '	<div style="BORDER-RIGHT: medium none; BORDER-TOP: medium none;Z-INDEX:999; BACKGROUND: #990000; LEFT: px; BORDER-LEFT: medium none; WIDTH: 475px; BORDER-BOTTOM: medium none; POSITION: relative; TOP: 0px; HEIGHT: 30px"> ' +
        '	  <div style="DISPLAY: inline; FONT-SIZE: 9pt; Z-INDEX: 11; LEFT: 33px; WIDTH: 26px; COLOR: #ffffff;  POSITION: absolute; TOP: 7px; HEIGHT: 16px" align="center"  ms_positioning="FlowLayout">注意' +
        '      </div> ' +
        '    <img style="Z-INDEX:9999; LEFT: 6px; POSITION: absolute; TOP: 3px" alt="" ' +
        '        src="' +
        rootpath +
        'images/dialog24.gif" ismap="true">' +
        '    </div> ' +
        '	<div id="ModalDialogMsgText" style="Z-INDEX:90002;FONT-SIZE: 9pt; LEFT: 74px; OVERFLOW: auto; WIDTH: 371px;  POSITION: absolute; TOP: 46px; HEIGHT: 79px">' +
        '    </div> ' +
        '    <img style="Z-INDEX:9999; LEFT: 22px; POSITION: absolute; TOP: 46px" alt="" ' +
        '        src="' +
        rootpath +
        'images/msg.gif"> ' +
        '    <input id="ModalDiagCloseButton" style="BORDER-RIGHT: #808080 1px solid; BORDER-TOP: #808080 1px solid;margin: 0 0 0 0;padding-top:1;vertical-align: middle;FONT-SIZE: 9pt; Z-INDEX:999; BACKGROUND: #c00000; LEFT: 209px; BORDER-LEFT: #808080 1px solid; WIDTH: 63px; COLOR: #ffffff; BORDER-BOTTOM: #808080 1px solid; POSITION: absolute; TOP: 139px; HEIGHT: 23px" type="button" value="确定" size="32" >' +
        '    <iframe HSPACE="0" VSPACE="0" frameborder="no" border="0" marginwidth="0" marginheight="0" scrolling="no" style="Z-INDEX:-1;LEFT: 0px;TOP:0px;WIDTH:475px;POSITION:relative;HEIGHT:179px;">' +
        '    </iframe>' +
        ' </div>';
        $(document.body).append(DialogDiv);
    }
    $("#ModalDiagCloseButton").click(function () {
        CloseDialog();
        $ById("ModalDialog").remove();
        clearLockScreen();
        //$("#iFrameLock").remove();
        //enableSelect();
    });


    $ById("ModalDialogMsgText").html(aMessage);
    setcenter("ModalDialog");

    $ById("ModalDialog").show();

}

function ShowMassage(aMessage) {
    //生成消息窗口
    rootpath = getroot();
    //lockScreen();
    //disableSelect();
    var aObj = $ById("ModalDialog");

    if (aObj.length == 0) {
        var DialogDiv = ' <div id="ModalDialog" ' +
        '   style="Z-INDEX:9999; BORDER-RIGHT: #808080 2px solid; BORDER-TOP: #808080 2px solid; BACKGROUND: #ffffff; LEFT: 198px; BORDER-LEFT: #808080 2px solid; WIDTH: 477px; BORDER-BOTTOM: #808080 2px solid; POSITION: absolute; TOP: 254px; HEIGHT: 181px;display: none;"> ' +
        '	<div style="BORDER-RIGHT: medium none; BORDER-TOP: medium none;Z-INDEX:999; BACKGROUND: #990000; LEFT: px; BORDER-LEFT: medium none; WIDTH: 475px; BORDER-BOTTOM: medium none; POSITION: relative; TOP: 0px; HEIGHT: 30px"> ' +
        '	  <div style="DISPLAY: inline; FONT-SIZE: 9pt; Z-INDEX: 11; LEFT: 33px; WIDTH: 26px; COLOR: #ffffff;  POSITION: absolute; TOP: 7px; HEIGHT: 16px" align="center"  ms_positioning="FlowLayout">注意' +
        '      </div> ' +
        '    <img style="Z-INDEX:9999; LEFT: 6px; POSITION: absolute; TOP: 3px" alt="" ' +
        '        src="' +
        rootpath +
        'images/dialog24.gif" ismap="true">' +
        '    </div> ' +
        '	<div id="ModalDialogMsgText" style="Z-INDEX:90002;FONT-SIZE: 9pt; LEFT: 74px; OVERFLOW: auto; WIDTH: 371px;  POSITION: absolute; TOP: 46px; HEIGHT: 79px">' +
        '    </div> ' +
        '    <img style="Z-INDEX:9999; LEFT: 22px; POSITION: absolute; TOP: 46px" alt="" ' +
        '        src="' +
        rootpath +
        'images/msg.gif"> ' +
        '    <input id="ModalDiagCloseButton" style="BORDER-RIGHT: #808080 1px solid; BORDER-TOP: #808080 1px solid;margin: 0 0 0 0;padding-top:1;vertical-align: middle;FONT-SIZE: 9pt; Z-INDEX:999; BACKGROUND: #c00000; LEFT: 209px; BORDER-LEFT: #808080 1px solid; WIDTH: 63px; COLOR: #ffffff; BORDER-BOTTOM: #808080 1px solid; POSITION: absolute; TOP: 139px; HEIGHT: 23px" type="button" value="确定" size="32" >' +
        '    <iframe HSPACE="0" VSPACE="0" frameborder="no" border="0" marginwidth="0" marginheight="0" scrolling="no" style="Z-INDEX:-1;LEFT: 0px;TOP:0px;WIDTH:475px;POSITION:relative;HEIGHT:179px;">' +
        '    </iframe>' +
        ' </div>';
        $(document.body).append(DialogDiv);
    }
    $("#ModalDiagCloseButton").click(function () {
        CloseDialog();
        $ById("ModalDialog").remove();
        clearLockScreen();
        //enableSelect();
    });


    $ById("ModalDialogMsgText").html(aMessage);
    setcenter("ModalDialog");

    $ById("ModalDialog").show();

}


function getvalidlogin(aloginname) {
    //根据客户端提供的登录名检查是否名称重复

    ajaxpath = getajaxpath(); //获取ajax服务端文件URL地址
    var AjaxServerPage = ajaxpath + "getValidlogin.aspx";

    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "login": aloginname
        },
        datatype: "text",
        contentType: "application/x-www-form-urlencoded;charset=utf-8"
    });

    var s = aObj.responseText.toString();
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");

    return s;
}

function getvalidemail(aEmail) {
    //根据客户端提供的邮箱检查是否邮箱重复

    ajaxpath = getajaxpath(); //获取ajax服务端文件URL地址
    var AjaxServerPage = ajaxpath + "getValidEmail.aspx";

    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "email": aEmail
        },
        datatype: "text",
        contentType: "application/x-www-form-urlencoded;charset=utf-8"
    });

    var s = aObj.responseText.toString();
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");

    return s;
}

function IsValidEmail(emails) {
    var emailPattern = /^\w+((-\w+)|(\.\w+))*\@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+$/;
    if (emailPattern.test(emails) == false)
        return false;
    else
        return true;
}



function setprint(sqldetail, sqlmaster, notes) {
    //设置ActiveX报表打印控件参数
    var prtobj = document.getElementById("gwlReport");
    if (sqldetail != "")
        prtobj.SQL = sqldetail;
    else
        prtobj.SQL = "null";

    if (sqlmaster != "")
        prtobj.MasterSQL = sqlmaster;
    else
        prtobj.MasterSQL = "null";

    if (notes != "")
        prtobj.Notes = notes;
    else
        prtobj.Notes = "";
}

function Print() {
    //调用activeX打印
    var obj = document.getElementById("gwlReport");
    if (obj.PrintReport != null)
        obj.PrintReport();
}

function PrintById(ActiveXId) {
    //调用指定activeX打印
    var obj = document.getElementById(ActiveXId);
    if (obj.PrintReport != null)
        obj.PrintReport();
}

function PopMessage(aMsg) {
    //显示消息
    //var dlg = $byid("MsgPopup");
    if (MsgPopup != null) {
        MsgPopup.SetWidth(420);
        MsgPopup.SetHeight(150);
        MsgPopup.SetContentHtml(aMsg);
        MsgPopup.Show();
    }
    else
        ShowMassage(aMsg);
}

function HideMessage() {
    if (MsgPopup != null) {
        MsgPopup.Hide();
    }
}

function GetPerson() {
    popUpSelectPerson.Show();
}

function PersonInfo() {
    //人员信息类
    this.rybh = ""; //人员编号
    this.xm = ""; //姓名
    this.sfzh = ""; //身份证号
    this.qydm = ""; //企业代码
    this.dwbm = ""; //单位编码
    this.dwqc = ""; //单位全称
    //设置值
    this.SetValue = function (aRybh, aXm, aSfzh, aQydm, aDwbm, aDwqc) {
        this.rybh = aRybh.toString();
        this.xm = aXm.toString();
        this.sfzh = aSfzh.toString();
        this.qydm = aQydm.toString();
        this.dwbm = aDwbm.toString();
        this.dwqc = aDwqc.toString();
    };
}

function GetPersonInfo() {
    //取人员信息
    var p = new PersonInfo();
    p.rybh = $byid("varRybh").val();
    p.xm = $byid("varXm").val();
    p.sfzh = $byid("varSfzh").val();
    p.qydm = $byid("varQydm").val();
    p.dwbm = $byid("varDwbm").val();
    p.dwqc = $byid("varDwqc").val();

    return p;
}

//-------------------------------- ASHX调用函数----------------------------------------
function GetAjaxDataByKey(aHandler, aKey) {
    //根据Key值，从后台服务程序取数据

    // aKey     键值
    // aHandler 后台服务程序，如ashx文件
    // 返回字符串

    //post命令中，中文不用编码处理

    ajaxpath = getajaxpath();
    var AjaxServerPage = ajaxpath + aHandler;

    //key = escape(key);
    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false, //采用同步方式获取数据
        data: {
            "cmd": "get",
            "key": aKey
        },
        datatype: "text"
    });

    var s = aObj.responseText.toString();
    s = unescape(s);

    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");

    return s;
}

function GetAjaxStatus(aHandler, aCmd, aData) {
    //根据Key值，从后台服务程序取数据

    // aKey     键值
    // aData	Json对象
    // aHandler 后台服务程序，如ashx文件
    // 返回字符串

    //post命令中，中文不用编码处理

    ajaxpath = getajaxpath();
    var AjaxServerPage = ajaxpath + aHandler;

    //key = escape(key);
    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false, //采用同步方式获取数据
        data: {
            "cmd": "get",
            "key": aCmd,
            "data": aData
        },
        datatype: "text"
    });

    var s = aObj.responseText.toString();
    s = unescape(s);

    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");

    return s;
}

function PostAjaxDataByKey(aHandler, aKey, aData) {
    //根据Key值，向后台服务程序提交数据

    // aKey     键值
    // aHandler 后台服务程序，如ashx文件
    // aData    数据

    //返回约定：-1 提交失败 1 提交成功 


    //post命令中，中文不用编码处理

    ajaxpath = getajaxpath();
    var AjaxServerPage = ajaxpath + aHandler;

    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "cmd": "post",
            "key": aKey,
            "data": aData
        },
        datatype: "text"
    });

    var s = aObj.responseText.toString();
    s = unescape(s);
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");

    return s;
}




function writesyslog(object, objectid, operate, notes) {
    ///记录操作日志
    var log = { "usercode": "", "username": "", "object": "", "objectid": "", "operate": "", "notes": "" };
    log.usercode = usercode;
    log.username = username;
    log.object = object;
    log.objectid = objectid;
    log.operate = operate;
    log.notes = notes;
    var aData = JsonToStr(log);

    JsonInsert("t_sys_logs", "id", "-1", aData);
}

//-------------------------------- 字符串应用函数 --------------------------------------
function UnTagStr(aStr, aTag) {
    //把字符串值从一对标识中取出，如：
    //      s = "<value>这是一个返回值</value>";
    //      var v = UnTagStr(s,"value");
    //则v为：这是一个返回值

    var s = aStr;
    var tag1 = "<" + aTag + ">";
    var tag2 = "</" + aTag + ">";

    var i = s.indexOf(tag2);
    s = s.substring(0, i);
    s = s.replace(tag1, "");
    return s;
}

function replace(str, s1, s2) {
    //字符串全部替换函数，把str中的s1全部替换为s2
    var s = str;
    while (s.indexOf(s1) != -1) {
        s = s.replace(s1, s2);
    }
    return s;
}


function replaceln(aStr) {
    //替换回车换行
    var regR = /[\r]/g;
    var regN = /[\n]/g;

    aStr = aStr.replace(regR, "<br>");
    aStr = aStr.replace(regN, "");

    return aStr;
}

function GetTagLeftStr(aStr, aTag) {
    //取指定标识字符串左边的字符，如：
    //      str = "值1=值2";
    //      var v = GetTagLeftStr(str,"=");
    //      返回：值1

    var s = aStr;
    var i = s.indexOf(aTag);
    s = s.substring(0, i);
    s = replace(s, aTag, "");
    return s;
}

function GetTagRightStr(aStr, aTag) {
    //取指定标识字符串右边的字符，如：
    //      s = "值1=值2";
    //      var v = GetTagRightStr(s,"=");
    //      返回：值2

    var s = aStr;
    var s1 = GetTagLeftStr(aStr, aTag);
    s = replace(s, s1 + aTag, "");
    s = replace(s, aTag, "");
    return s;
}

//-------------------------------- JSON 应用函数 --------------------------------------
function StrToJson(aStr) {
    //把字符串对象转换为json对象，以便于访问
    var obj = $.secureEvalJSON(aStr);
    return obj;
}

function JsonToStr(aJson) {
    //把json对象转换为字符串,以便于传输
    var str = $.toJSON(aJson);
    return str;
}

function GetSelectJsonStr(aTable, aKeyField, aKey, aFieldList) {
    //根据Key值，向后台服务程序提交数据，返回指定字段的json串

    // aTable   表名
    // aKeyField    关键字段名
    // aKey     键值
    // aFieldList    要查询的字段列表

    //返回约定：-1 提交失败 1 提交成功 


    //post命令中，中文不用编码处理

    ajaxpath = getajaxpath();
    var AjaxServerPage = ajaxpath + "dbHandler.ashx";

    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "cmd": "select",
            "table": aTable,
            "keyfield": aKeyField,
            "key": aKey,
            "data": aFieldList
        },
        datatype: "text"
    });

    var s = aObj.responseText.toString();
    s = unescape(s);
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");

    return s;
}



function JsonSelect(aTable, aKeyField, aKey, aFieldList, aCallBackFunc) {
    //根据Key值，向后台服务程序提交数据，返回指定字段的json串,并传递给aCallBackFunc回调函数

    // aTable   表名
    // aKeyField    关键字段名
    // aKey     键值
    // aFieldList    要查询的字段列表

    //返回约定：-1 提交失败 1 提交成功 


    //post命令中，中文不用编码处理

    ajaxpath = getajaxpath();
    var AjaxServerPage = ajaxpath + "dbHandler.ashx";

    $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: true,
        data: {
            "cmd": "select",
            "table": aTable,
            "keyfield": aKeyField,
            "key": aKey,
            "data": aFieldList
        },
        datatype: "text",
        success: function (data) {
            var s = data.toString();
            s = unescape(s);
            var i = s.indexOf("</value>");
            s = s.substring(0, i);
            s = s.replace("<value>", "");
            aCallBackFunc(s);
        }
    });

}


function JsonInsert(aTable, aKeyField, aKey, aData) {
    //根据Key值，向后台服务程序提交数据

    // aTable   表名
    // aKeyField    关键字段名
    // aKey     键值
    // aData    数据，以json字符串表示{"字段名1":值1,...,"字段名N":值N}

    //返回约定：-1 提交失败 1 提交成功 -2 记录已经存在


    //post命令中，中文不用编码处理

    ajaxpath = getajaxpath();
    var AjaxServerPage = ajaxpath + "dbHandler.ashx";

    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "cmd": "insert",
            "table": aTable,
            "keyfield": aKeyField,
            "key": aKey,
            "data": aData
        },
        datatype: "text"
    });

    var s = aObj.responseText.toString();
    s = unescape(s);
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");

    return s;
}

function JsonUpdate(aTable, aKeyField, aKey, aData) {
    //根据Key值，向后台服务程序提交数据

    // aTable   表名
    // aKeyField    关键字段名
    // aKey     键值
    // aData    数据，以json字符串表示 {"字段名1":值1,...,"字段名N":值N}

    //返回约定：-1 提交失败 1 提交成功 


    //post命令中，中文不用编码处理

    ajaxpath = getajaxpath();
    var AjaxServerPage = ajaxpath + "dbHandler.ashx";

    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "cmd": "update",
            "table": aTable,
            "keyfield": aKeyField,
            "key": aKey,
            "data": aData
        },
        datatype: "text"
    });

    var s = aObj.responseText.toString();
    s = unescape(s);
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");

    return s;
}

function JsonDelete(aTable, aKeyField, aKey) {
    //根据Key值，向后台服务程序提交数据

    // aTable   表名
    // aKeyField    关键字段名
    // aKey     键值

    //返回约定：-1 提交失败 1 提交成功 


    //post命令中，中文不用编码处理

    ajaxpath = getajaxpath();
    var AjaxServerPage = ajaxpath + "dbHandler.ashx";

    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "cmd": "delete",
            "table": aTable,
            "keyfield": aKeyField,
            "key": aKey
        },
        datatype: "text"
    });

    var s = aObj.responseText.toString();
    s = unescape(s);
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");

    return s;
}
//-------------------------------- JSON 应用函数 -------------------------------------- end

function isnullstr(value) {
    var r = (value == null) ? "0" : value;

    r = (r == "") ? "0" : r;
    return r;
}

function SafeFloat(aValue) {
    //安全字符串浮点数转换函数  非法值转为0.00
    var v = Number(aValue);
    if (isNaN(v)) {
        return 0.00;
    }

    return parseFloat(v);
}

function SafeInt(aValue) {
    //安全字符串整数转换函数  非法值转为0
    var v = Number(aValue);

    if (isNaN(v)) {
        return 0;
    }

    return parseInt(v);
}

//--------------------------------数据UI控件操作函数-------------------------------

function SetASPxComboBox(aCombobox, aValue) {
    //ASPxComboBox赋值
    var obj = aCombobox.FindItemByValue(aValue);
    if (obj != null)
        aCombobox.SetSelectedItem(obj);
    else
        aCombobox.SetSelectedIndex(0);
}

function SetCheckbox(aId, aValue) {
    //CheckBox赋值
    if (aValue == "True")
        $byid(aId).attr("checked", true);
    else
        $byid(aId).attr("checked", false);
}

function SetAspxDate(aObj, aValue) {
    //ASPxDateEdit赋值
    if (aValue != "" && aValue != NaN) {
        var s = aValue;
        s = replace(s, "/", "-");
        aObj.SetDate(parseDate(s));
        //aObj.Date = parseDate(aValue);
    }
    else
        aObj.SetText("");
}


function GetASPxComboBoxValue(aCombobox) {
    //ASPxComboBox取值
    var aValue = "";
    var obj = aCombobox.GetSelectedItem();
    if (obj != null)
        aValue = obj.value;

    return aValue;
}

function GetCheckboxValue(aId) {
    //CheckBox取值
    var aValue = "0";
    //var v = $byid(aId).attr("checked");

    aValue = $byid(aId).attr("checked") == "checked" ? "1" : "0";

    return aValue;

}

function GetAspxDateValue(aObj) {
    //ASPxDateEdit取值
    var aValue = "";
    aValue = aObj.GetText();
    return aValue;
}

function SetColText(aGridObj, aFieldName, aValue) {
    //设置DevExpress GridView列的显示内容,tds为选中行的jQuery单元格对象
    //tds取法： tds = $("table[id^=表id] tr[id^=行id" + RowIndex + "] td");
    var col = aGridObj.GetColumnByField(aFieldName);
    var idx = col.index;
    tds.eq(idx).text(aValue);
}

//----消息处理函数--------------------------------------------------------------------------------------------
function PostMessage(aMessageId, aMessageType, aTitle, aMessage, aTable, aKey, aTargets) {

    //发送消息 
    // <summary>
    // 发送消息给多个用户或角色，aMessageId 消息号，aMessageType 消息类型， aMessage 消息内容，aTable 影响表名，aKey 影响记录键值，
    // aSender 发送者人员编号， aTarget 接收者人员编号列表、角色列表串，以西文逗号分隔
    // </summary>

    var aSender = username;
    var msgjson = { "aMessageId": aMessageId, "aMessageType": aMessageType, "aTitle": aTitle, "aMessage": aMessage, "aTable": aTable, "aKey": aKey, "aSender": aSender, "aTargets": aTargets };
    var msgstr = JsonToStr(msgjson);

    ajaxpath = getajaxpath();
    var AjaxServerPage = ajaxpath + "msgHander.ashx";
    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "cmd": "post",
            "msg": msgstr
        },
        datatype: "text"
    });

    var s = aObj.responseText.toString();
    s = unescape(s);
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");

    return s;
}




function HasMessage() {
    //测试当前用户是否有消息
    ajaxpath = getajaxpath();
    var AjaxServerPage = ajaxpath + "msgHander.ashx";

    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "cmd": "test"
        },
        datatype: "text"
    });

    var s = aObj.responseText.toString();
    s = unescape(s);
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");
    var json = StrToJson(s);
    MinMessageRowId = json.minrowid;
    MaxMessageRowId = json.maxrowid;
    TotMessageCount = parseInt(json.count);
    return (TotMessageCount > 0) ? true : false;
}

function HasNewSpbg() {
    //测试当前用户是否有需要审批的报告
    ajaxpath = getajaxpath();
    var AjaxServerPage = ajaxpath + "msgHander.ashx";

    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "cmd": "getnewspbgcount"
        },
        datatype: "text"
    });

    var s = aObj.responseText.toString();
    s = unescape(s);
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");
    var json = StrToJson(s);
    TotMessageCount = parseInt(json.count);
    return (TotMessageCount > 0) ? true : false;
}

function HasExeSpbg() {
    //测试当前用户是否有需要执行的报告
    ajaxpath = getajaxpath();
    var AjaxServerPage = ajaxpath + "msgHander.ashx";

    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "cmd": "getexespbgcount"
        },
        datatype: "text"
    });

    var s = aObj.responseText.toString();
    s = unescape(s);
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");
    var json = StrToJson(s);
    TotMessageCount = parseInt(json.count);
    return (TotMessageCount > 0) ? true : false;
}

function HasRedoSpbg() {
    //测试当前用户是否有发回重作的报告
    ajaxpath = getajaxpath();
    var AjaxServerPage = ajaxpath + "msgHander.ashx";

    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "cmd": "getredospbgcount"
        },
        datatype: "text"
    });

    var s = aObj.responseText.toString();
    s = unescape(s);
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");
    var json = StrToJson(s);
    TotMessageCount = parseInt(json.count);
    return (TotMessageCount > 0) ? true : false;
}


function CheckMsg() {
    var msg = "";
    var cnt = 0;
    var idx = 0;
    if (HasMessage()) {
        cnt = cnt + 1;
        rootpath = getroot();
        msg = cnt.toString() + "、业务通知消息，请点击<a href=\"" + rootpath + "UserMessageList.aspx\" target=\"_blank\">“打开业务消息”<\/a>进行处理。工作过程中，随时可以通过点击页面上方<a href=\"" + rootpath + "UserMessageList.aspx\" target=\"_blank\">【我的消息】<\/a>链接，打开消息页面！<br>---------------------------------------------------------------";
    }

    if (HasNewSpbg()) {
        rootpath = getroot();
        cnt = cnt + 1;
        msg = msg + "<br><br>" + cnt.toString() + "、有" + TotMessageCount.toString() + "份报告需要审批，请点击<a href=\"" + rootpath + "hrSP/spAuditIndex.aspx?style=2\" target=\"_blank\">“打开报告”<\/a>进行处理！<br>---------------------------------------------------------------";
    }

    if (HasExeSpbg()) {
        rootpath = getroot();
        cnt = cnt + 1;
        msg = msg + "<br><br>" + cnt.toString() + "、有" + TotMessageCount.toString() + "份报告已经审批通过，需要您作后续业务处理，请点击<a href=\"" + rootpath + "hrSP/spExecIndex.aspx?style=2\" target=\"_blank\">“打开报告”<\/a>进行处理！<br>---------------------------------------------------------------";
    }

    if (HasRedoSpbg()) {
        rootpath = getroot();
        cnt = cnt + 1;
        msg = msg + "<br><br>" + cnt.toString() + "、有" + TotMessageCount.toString() + "份报告被发回重作，需要您修改后重新申报，请点击<a href=\"" + rootpath + "hrSP/SpbgIndex.aspx?style=5\" target=\"_blank\">“打开报告”<\/a>进行处理！<br>---------------------------------------------------------------";
    }

    if (MsgPopup != null && msg != "") {
        msg = "【" + username + "】请注意，您有" + cnt.toString() + "条消息：" + "<br>---------------------------------------------------------------" + "<br><br>" + msg;
        MsgPopup.SetContentHtml(msg);
        MsgPopup.Show();
    }
}

//---------------------------------业务函数 begin-----------------------------------------------------
function GetSubjectById(aId, aFieldList) {
    //根据id值，取科目指定字段的json对象，没有返回值，结果为null
    // aId             科目编码
    // aFieldList    要查询的字段列表
    //返回约定：-1 提交失败 1 提交成功 
    //post命令中，中文不用编码处理

    ajaxpath = getajaxpath();
    var AjaxServerPage = ajaxpath + "SubjectHandler.ashx";

    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "cmd": "getbyid",
            "id": aId,
            "data": aFieldList
        },
        datatype: "text"
    });

    var s = aObj.responseText.toString();
    s = unescape(s);
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");

    if (s == "-1") return null;

    var r = StrToJson(s);
    return r;
}

function GetSubjectByCode(aPerportyName, aCode, aFieldList) {
    //根据科目代码分类、指定代码值，取科目的指定字段json对象，没有返回值，结果为null
    //aPerportyName         代码分类         
    // aCode                       指定代码
    // aFieldList    要查询的字段列表
    //返回约定：-1 提交失败 1 提交成功 
    //post命令中，中文不用编码处理

    ajaxpath = getajaxpath();
    var AjaxServerPage = ajaxpath + "SubjectHandler.ashx";
    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "cmd": "getbycode",
            "perportyname": aPerportyName,
            "code": aCode,
            "data": aFieldList
        },
        datatype: "text"
    });

    var s = aObj.responseText.toString();
    s = unescape(s);
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");

    if (s == "-1") return null;

    var r = StrToJson(s);
    return r;
}

function GetParentByCode(aPerportyName, aCode, aFieldList) {
    //根据科目代码分类、指定代码值，取科目的父节点的指定字段json对象，没有返回值，结果为null
    //aPerportyName         代码分类         
    // aCode                       指定代码
    // aFieldList    要查询的字段列表
    //返回约定：-1 提交失败 1 提交成功 
    //post命令中，中文不用编码处理

    ajaxpath = getajaxpath();
    var AjaxServerPage = ajaxpath + "SubjectHandler.ashx";
    var aObj = $.ajax({
        type: "post",
        url: AjaxServerPage,
        async: false,
        data: {
            "cmd": "getparentbycode",
            "perportyname": aPerportyName,
            "code": aCode,
            "data": aFieldList
        },
        datatype: "text"
    });

    var s = aObj.responseText.toString();
    s = unescape(s);
    var i = s.indexOf("</value>");
    s = s.substring(0, i);
    s = s.replace("<value>", "");

    if (s == "-1") return null;

    var r = StrToJson(s);
    return r;
}


//----------------------------------业务函数 end----------------------------------------------------
